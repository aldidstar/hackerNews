{"version":3,"file":"static/js/462.b496c4da.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/CardContent/CardContent.module.css?1862","components/CardContent/CardContent.js","webpack://my-app/./src/pages/CommentPage/CommentPage.module.css?d27c","components/Article/Article.js","webpack://my-app/./src/components/CommentList/CommentList.module.css?2382","webpack://my-app/./src/components/Comment/Comment.module.css?ff28","components/Comment/Comment.js","components/CommentList/CommentsList.js","pages/CommentPage/CommentPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardContent\":\"CardContent_cardContent__qZEmk\",\"nickname\":\"CardContent_nickname__C2BOi\",\"time\":\"CardContent_time__GoHth\"};","import React from \"react\";\nimport styles from \"./CardContent.module.css\";\n\n\nconst CardContent = ({ title, score, by, time, descendants }) => {\n    const date = (new Date(time * 1000)).toLocaleString();\n\n    return (\n        <React.Fragment>\n            {title && <h2>{title}</h2>}\n            {by && time && (\n                <div className={styles.cardContent}>\n                    <span className={styles.nickname}>Автор: <strong>{by}</strong></span>\n                    <span className={styles.date}>Опубликовано: <strong>{date}</strong></span>\n                </div>\n            )}\n            {score && descendants >= 0 && (\n                <div className={styles.cardContent}>\n                    {<span>Рейтинг: <strong>{score}</strong></span>}\n                    {descendants ? (\n                        <span>Комментарии: <strong>{descendants}</strong></span>\n                    ) : (\n                        <span>Комментариев нет</span>\n                    )}\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\n\nexport default CardContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"CommentPage_header__LW9dq\",\"container\":\"CommentPage_container__m8aG3\",\"btn\":\"CommentPage_btn__UXQ1E\"};","import React from \"react\";\nimport CardContent from \"../CardContent/CardContent\";\n\nconst Article = (props) => {\n    return (\n        <article>\n            <CardContent {...props} />\n            {props.text && (\n                <p dangerouslySetInnerHTML={{ __html: props.text }} />\n            )}\n            {props.url && (\n                <p>\n                    <a\n                        href={props.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Прочитать источник\n                    </a>\n                </p>\n            )}\n        </article>\n    );\n};\n\n\nexport default Article;\n","// extracted by mini-css-extract-plugin\nexport default {\"commentThread\":\"CommentList_commentThread__-Xqvg\",\"comment\":\"CommentList_comment__fuVFU\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Comment_container__xpV3e\",\"commentInnerContainer\":\"Comment_commentInnerContainer__CBfqc\",\"commentAuthor\":\"Comment_commentAuthor__rtnPT\",\"text\":\"Comment_text__RzMfI\",\"commentDead\":\"Comment_commentDead__5NeoT\",\"subCommentsVisible\":\"Comment_subCommentsVisible__KrUht\",\"subCommentsHidden\":\"Comment_subCommentsHidden__tnxzy\",\"button\":\"Comment_button__TQGmu\",\"buttonText\":\"Comment_buttonText__UlnlD\"};","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport styles from \"./Comment.module.css\";\nimport { fetchSubComments } from \"../../store/fetchEverything\";\nimport CommentsList from \"../../components/CommentList/CommentsList\";\n\n\nconst Comment = ({ item }) => {\n    const { by, id, kids, text, time, dead, deleted } = item;\n    const date = (new Date(time * 1000)).toLocaleString();\n\n    const dispatch = useDispatch();\n    const subComments = useSelector(state => state.news.subComments);\n\n    const [subCommentsIsVisible, setSubCommentsIsVisible] = useState(false);\n\n    useEffect(() => {\n        if (kids) {\n            dispatch(fetchSubComments(kids));\n        }\n    }, [dispatch, kids]);\n\n    const showSubComments = () => {\n        setSubCommentsIsVisible(!subCommentsIsVisible);\n    };\n\n    const filtredSubComments = subComments.filter(item => item.parent === id);\n\n    const commentDead = dead ? (\n        <p className={styles.commentDead}>Комментария нет</p>\n    ) : null;\n\n    const commentDeleted = deleted ? (\n        <p className={styles.commentDead}>Комментарий удален</p>\n    ) : null;\n\n    const showSubCommentsClass = subCommentsIsVisible\n        ? styles.subCommentsVisible\n        : styles.subCommentsHidden;\n\n    return (\n        <React.Fragment>\n            <div className={styles.container}>\n                <div className={styles.commentInnerContainer}>\n                    <span className={styles.commentAuthor}>{by}</span>\n                    <p>Опубликовано: {date}</p>\n                </div>\n\n                {text && (\n                    <p className={styles.text} dangerouslySetInnerHTML={{__html:text}} />\n                )}\n\n                {commentDead}\n\n                {commentDeleted}\n\n                {kids && (\n                    <button className={styles.button} onClick={showSubComments}>\n                      <p className={styles.buttonText}>{subCommentsIsVisible ? \"Закрыть ветку\" : \"Раскрыть ветку\"}</p>\n                    </button>\n                )}\n            </div>\n\n            {kids && (\n                <div className={showSubCommentsClass}>\n                    <CommentsList comments={filtredSubComments} />\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\n\nexport default Comment;\n","import React from \"react\";\nimport styles from \"./CommentList.module.css\";\nimport Comment from \"../Comment/Comment\";\n\nconst CommentsList = ({ comments }) => {\n    return (\n        <React.Fragment>\n            <ul className={styles.commentThread}>\n                {comments.map((comment) => (\n                    <li key={comment.id} className={styles.comment}>\n                        <Comment item={comment} />\n                    </li>\n                ))}\n            </ul>\n        </React.Fragment>\n    );\n};\n\nexport default CommentsList;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport styles from \"./CommentPage.module.css\";\nimport Article from \"../../components/Article/Article\";\nimport CommentsList from \"../../components/CommentList/CommentsList\";\nimport Loading from \"../../components/Loading/Loading\";\n\nimport { newsActions } from \"../../store/slices/newsSlice\";\nimport { fetchStory, fetchComments } from \"../../store/fetchEverything\";\n\nconst CommentPage = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const articleIsLoading = useSelector(state => state.news.articleIsLoading);\n    const stories = useSelector(state => state.news.stories);\n    const findStory = stories.find((item) => item.id === Number(id));\n\n    const article = useSelector(state => state.news.article);\n    const comments = useSelector(state => state.news.comments);\n\n    const commentsAreLoading = useSelector(state => state.news.commentsAreLoading);\n\n    const loadComments = useCallback(() => {\n        if (article !== null && article.kids) {\n            dispatch(fetchComments());\n        }\n    }, [dispatch, article]);\n\n    useEffect(() => {\n        if (findStory) {\n            dispatch(newsActions.loadArticle(findStory));\n        } else {\n            dispatch(fetchStory(id));\n        }\n    }, [findStory, dispatch, id]);\n\n    useEffect(() => {\n        loadComments();\n    }, [loadComments]);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            loadComments();\n        }, 60000);\n\n        return () => clearInterval(interval);\n    }, [loadComments]);\n\n    return (\n        <React.Fragment>\n            <header className={styles.header}>\n                <button onClick={() => navigate(-1)} className={styles.btn}>Назад</button>\n            </header>\n\n            <main className={styles.container}>\n\n                {article !== null && (\n                    <section>\n                        {articleIsLoading ? (\n                            <Loading />\n                        ) : (\n                            <Article {...article} />\n                        )}\n                    </section>\n                )}\n\n                {article !== null && article.kids && (\n                    <>\n                      <button onClick={loadComments} className={styles.btn}>Обновить комментарии</button>\n                      <section>\n                        {commentsAreLoading ? (\n                          <Loading />\n                            ) : (\n                              <CommentsList comments={comments} />\n                            )}\n                      </section>\n                    </>\n                )}\n            </main>\n        </React.Fragment>\n    );\n};\n\nexport default CommentPage;\n"],"names":["title","score","by","time","descendants","date","Date","toLocaleString","className","styles","props","CardContent","text","dangerouslySetInnerHTML","__html","url","href","target","rel","item","id","kids","dead","deleted","dispatch","useDispatch","subComments","useSelector","state","news","useState","subCommentsIsVisible","setSubCommentsIsVisible","useEffect","fetchSubComments","filtredSubComments","filter","parent","commentDead","commentDeleted","showSubCommentsClass","onClick","comments","map","comment","navigate","useNavigate","useParams","articleIsLoading","findStory","stories","find","Number","article","commentsAreLoading","loadComments","useCallback","fetchComments","newsActions","fetchStory","interval","setInterval","clearInterval","Loading"],"sourceRoot":""}